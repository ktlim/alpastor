---
# Source: csi-wekafsplugin/templates/controllerserver.yaml
apiVersion: v1
kind: ServiceAccount
imagePullSecrets:
- name: csi-wekafs-creds
metadata:
  name: csi-wekafs-controller
  namespace: csi-wekafs
---
# Source: csi-wekafsplugin/templates/nodeserver.yaml
apiVersion: v1
kind: ServiceAccount
imagePullSecrets:
- name: csi-wekafs-creds
metadata:
  name: csi-wekafs-node
  namespace: csi-wekafs
---
# Source: csi-wekafsplugin/templates/controllerserver.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-wekafs-controller
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list"]
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete", "update", "patch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims/status"]
    verbs: ["update", "patch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csinodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments/status"]
    verbs: ["patch"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csinodeinfos"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["create", "list", "watch", "delete", "get", "update"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotcontents"]
    verbs: ["create", "get", "list", "watch", "update", "delete", "patch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotcontents/status"]
    verbs: ["update", "create", "get", "list", "watch", "delete", "patch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshots"]
    verbs: ["get", "list", "watch", "update", "create", "delete", "patch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshots/status"]
    verbs: ["get", "list", "watch", "update", "create", "delete", "patch"]
---
# Source: csi-wekafsplugin/templates/nodeserver.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-wekafs-node
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list"]
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["create", "delete", "get", "list", "watch", "update"]
  - apiGroups: [""]
    resources: ["persistentvolumesclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["get", "list", "watch", "create", "update", "patch"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch", "update"]
---
# Source: csi-wekafsplugin/templates/controllerserver.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-wekafs-controller
subjects:
  - kind: ServiceAccount
    name: csi-wekafs-controller
    namespace: csi-wekafs
roleRef:
  kind: ClusterRole
  name: csi-wekafs-controller
  apiGroup: rbac.authorization.k8s.io
---
# Source: csi-wekafsplugin/templates/nodeserver.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-wekafs-node
subjects:
  - kind: ServiceAccount
    name: csi-wekafs-node
    namespace: csi-wekafs
roleRef:
  kind: ClusterRole
  name: csi-wekafs-node
  apiGroup: rbac.authorization.k8s.io
---
# Source: csi-wekafsplugin/templates/nodeserver.yaml
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: csi-wekafs-node
  namespace: csi-wekafs
spec:
  selector:
    matchLabels:
      app: csi-wekafs-node
  template:
    metadata:
      labels:
        app: csi-wekafs-node
    spec:
      serviceAccountName: csi-wekafs-node
      hostNetwork: true
      containers:
        - name: wekafs
          securityContext:
            privileged: true
          image: quay.io/weka.io/csi-wekafs:v0.7.3
          imagePullPolicy: Always
          args:
            - "--v=5"
            - "--drivername=$(CSI_DRIVER_NAME)"
            - "--endpoint=$(CSI_ENDPOINT)"
            - "--nodeid=$(KUBE_NODE_NAME)"
            - "--dynamic-path=$(CSI_DYNAMIC_PATH)"
            - "--csimode=$(X_CSI_MODE)"
          ports:
            - containerPort: 9898
              name: healthz
              protocol: TCP
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 2
          env:
            - name: CSI_DRIVER_NAME
              value: csi.weka.io
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CSI_DYNAMIC_PATH
              value: csi-volumes
            - name: X_CSI_MODE
              value: node
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
            - mountPath: /var/lib/kubelet/pods
              mountPropagation: Bidirectional
              name: mountpoint-dir
            - mountPath: /var/lib/kubelet/plugins
              mountPropagation: Bidirectional
              name: plugins-dir
            - mountPath: /var/lib/csi-wekafs-data
              name: csi-data-dir
            - mountPath: /dev
              name: dev-dir
        - name: liveness-probe
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
          image: k8s.gcr.io/sig-storage/livenessprobe:v2.5.0
          args:
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
            - "--health-port=$(HEALTH_PORT)"
          env:
            - name: ADDRESS
              value: unix:///csi/csi.sock
            - name: HEALTH_PORT
              value: "9898"

        - name: csi-registrar
          image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.3.0
          args:
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
            - "--kubelet-registration-path=/var/lib/kubelet/plugins/csi-wekafs/csi.sock"
          securityContext:
            privileged: true
          env:
            - name: ADDRESS
              value: unix:///csi/csi.sock
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
            - mountPath: /registration
              name: registration-dir
            - mountPath: /var/lib/csi-wekafs-data
              name: csi-data-dir
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
      volumes:
        - hostPath:
            path: /var/lib/kubelet/plugins/csi-wekafs
            type: DirectoryOrCreate
          name: socket-dir
        - hostPath:
            path: /var/lib/kubelet/pods
            type: DirectoryOrCreate
          name: mountpoint-dir
        - hostPath:
            path: /var/lib/kubelet/plugins_registry
            type: Directory
          name: registration-dir
        - hostPath:
            path: /var/lib/kubelet/plugins
            type: Directory
          name: plugins-dir
        - hostPath:
            # 'path' is where PV data is persisted on host.
            # using /tmp is also possible while the PVs will not available after plugin container recreation or host reboot
            path: /var/lib/csi-wekafs-data/
            type: DirectoryOrCreate
          name: csi-data-dir
        - hostPath:
            path: /dev
            type: Directory
          name: dev-dir
---
# Source: csi-wekafsplugin/templates/controllerserver.yaml
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: csi-wekafs-controller
  namespace: csi-wekafs
spec:
  selector:
    matchLabels:
      app: csi-wekafs-controller
  serviceName: csi-wekafs-controller
  replicas: 1
  template:
    metadata:
      labels:
        app: csi-wekafs-controller
    spec:
      serviceAccountName: csi-wekafs-controller
      containers:
        - name: csi-attacher
          image: k8s.gcr.io/sig-storage/csi-attacher:v3.3.0
          securityContext:
            privileged: true
          args:
            - "--csi-address=$(ADDRESS)"
            - "--v=5"
          env:
            - name: ADDRESS
              value: unix:///csi/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
        - name: csi-provisioner
          image: k8s.gcr.io/sig-storage/csi-provisioner:v3.0.0
          args:
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
            - "--feature-gates=Topology=true"
          env:
            - name: ADDRESS
              value: unix:///csi/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: "/csi"
        - name: csi-resizer
          image: k8s.gcr.io/sig-storage/csi-resizer:v1.3.0
          args:
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
          env:
            - name: ADDRESS
              value: unix:///csi/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /csi

        - name: wekafs
          securityContext:
            privileged: true
          image: quay.io/weka.io/csi-wekafs:v0.7.3
          imagePullPolicy: Always
          args:
            - "--drivername=$(CSI_DRIVER_NAME)"
            - "--v=5"
            - "--endpoint=$(CSI_ENDPOINT)"
            - "--nodeid=$(KUBE_NODE_NAME)"
            - "--dynamic-path=$(CSI_DYNAMIC_PATH)"
            - "--csimode=$(X_CSI_MODE)"
          ports:
            - containerPort: 9898
              name: healthz
              protocol: TCP
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 2
          env:
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
            - name: CSI_DRIVER_NAME
              value: csi.weka.io
            - name: CSI_DRIVER_VERSION
              value: 0.7.3
            - name: X_CSI_MODE
              value: controller
            - name: CSI_DYNAMIC_PATH
              value: csi-volumes
            - name: X_CSI_DEBUG
              value: "false"
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
            - mountPath: /var/lib/kubelet/pods
              mountPropagation: Bidirectional
              name: mountpoint-dir
            - mountPath: /var/lib/kubelet/plugins
              mountPropagation: Bidirectional
              name: plugins-dir
            - mountPath: /var/lib/csi-wekafs-data
              name: csi-data-dir
            - mountPath: /dev
              name: dev-dir
        - name: liveness-probe
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
          image: k8s.gcr.io/sig-storage/livenessprobe:v2.5.0
          args:
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
            - "--health-port=$(HEALTH_PORT)"
          env:
            - name: ADDRESS
              value: unix:///csi/csi.sock
            - name: HEALTH_PORT
              value: "9898"
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
      volumes:
        - hostPath:
            path: /var/lib/kubelet/plugins/csi-wekafs
            type: DirectoryOrCreate
          name: socket-dir
        - hostPath:
            path: /var/lib/kubelet/pods
            type: DirectoryOrCreate
          name: mountpoint-dir
        - hostPath:
            path: /var/lib/kubelet/plugins_registry
            type: Directory
          name: registration-dir
        - hostPath:
            path: /var/lib/kubelet/plugins
            type: Directory
          name: plugins-dir
        - hostPath:
            # 'path' is where PV data is persisted on host.
            # using /tmp is also possible while the PVs will not available after plugin container recreation or host reboot
            path: /var/lib/csi-wekafs-data/
            type: DirectoryOrCreate
          name: csi-data-dir
        - hostPath:
            path: /dev
            type: Directory
          name: dev-dir
---
# Source: csi-wekafsplugin/templates/controllerserver.yaml
# cluster role
---
# Source: csi-wekafsplugin/templates/controllerserver.yaml
# cluster role binding
---
# Source: csi-wekafsplugin/templates/controllerserver.yaml
# stateful set of controller
---
# Source: csi-wekafsplugin/templates/driver.yaml
apiVersion: storage.k8s.io/v1
kind: CSIDriver
metadata:
  name: csi.weka.io
spec:
  attachRequired: true
  podInfoOnMount: true
  volumeLifecycleModes:
    - Persistent
